name: Docker Image CI

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'
  repository_dispatch:
    types: [master-updated]

jobs:
  repository:
    runs-on: ubuntu-latest
    outputs:
      hub: ${{ steps.docker_hub.outputs.hub }}
    steps:
      - name: Use proper Docker hub
        id: docker_hub
        shell: bash
        run: |
          if [ "${{ github.repository_owner }}" == "ledgersmb" ]; then
            echo ::set-output name=hub::ledgersmbdev
          else
            echo ::set-output name=hub::${{ github.repository_owner }}
          fi

  ledgersmb:
    runs-on: ubuntu-latest
    needs: repository
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup upterm session
      uses: lhotari/action-upterm@v1
    - name: Build and push to Docker Hub
      uses: whoan/docker-build-with-cache-action@v5
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_TOKEN }}
        image_name: ${{needs.repository.outputs.hub}}/ledgersmb-dev-lsmb
        image_tag: latest
        context: ledgersmb
        push_git_tag: ${{ github.event_name == 'push' || github.event.pull_request.merged }}
        pull_image_and_stages: false

  proxy:
    runs-on: ubuntu-latest
    needs: repository
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build and push to Docker Hub
      uses: whoan/docker-build-with-cache-action@v5
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_TOKEN }}
        image_name: ${{needs.repository.outputs.hub}}/ledgersmb-dev-nginx
        image_tag: latest
        push_git_tag: ${{ github.event_name == 'push' || github.event.pull_request.merged }}
        context: nginx

  postgres:
    runs-on: ubuntu-latest
    needs: repository
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Build and push to Docker Hub
      uses: whoan/docker-build-with-cache-action@v5
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_TOKEN }}
        image_name: ${{needs.repository.outputs.hub}}/ledgersmb-dev-postgres
        image_tag: latest
        push_git_tag: ${{ github.event_name == 'push' || github.event.pull_request.merged }}
        context: postgres
